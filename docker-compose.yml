version: "3.3"
services:
  traefik:
    image: "traefik:v2.9"
    container_name: "traefik"
    command:
      # - "--log.level=DEBUG"
      - "--api=true"
      - "--api.dashboard=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=frontend"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=felipe.alarcon.rozo@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "traefik-certificates:/letsencrypt"
    labels:
      - "traefik.enable=true"

      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:(.+)}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https@docker"

      - "traefik.http.routers.api.rule=Host(`monitor.m1.vms.re`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.service=api@internal"

      - "traefik.http.routers.api.tls.certresolver=myresolver"
    networks:
      - traefik
  linker:
    image: "blackingt73/link-saver:v1.0"
    container_name: "linker"
    networks:
      - traefik
    labels:
      - "traefik.http.services.linker-service.loadbalancer.server.port=80"
      - "traefik.http.routers.linker.service=linker-service"
      - "traefik.http.routers.linker.entrypoints=websecure"
      - "traefik.http.routers.linker.tls.certresolver=myresolver"
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.tls=true"
      - "traefik.http.routers.linker.rule=Host(`m1.vms.re`)"
  prometheus:
    image: prom/prometheus:v2.36.2
    container_name: "prometheus"
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      -  metrics
  node-exporter:
    container_name: "node-exporter"
    image: quay.io/prometheus/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro,rslave
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    networks:
      - metrics
  grafana:
    image: grafana/grafana
    environment:
      - GF_PATHS_CONFIG=/etc/grafana/custom.ini
    volumes:
      - ./grafana/custom.ini:/etc/grafana/custom.ini
    depends_on:
      - prometheus
      - traefik
    labels:
      - "traefik.http.services.grafana-service.loadbalancer.server.port=80"
      - "traefik.http.routers.grafana.service=grafana-service"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=myresolver"
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.m1.vms.re`)"
    networks:
      - traefik
      - metrics
networks:
  traefik:
  metrics:
volumes:
  traefik-certificates:
  prometheus_data:
